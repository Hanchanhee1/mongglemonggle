<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.aimae.mapper.CartMapper">
   

   
   <!-- 사용자의 장바구니 ID 조회 (간단한 방식) -->
   <select id="getUserCartId" parameterType="String" resultType="String">
       SELECT CART_ID FROM CART 
       WHERE USER_NUM = #{userNum} AND STATUS = 0
       AND ROWNUM = 1
   </select>
   
   <!-- 상품 추가 (간단한 방식) -->
   <insert id="addCart" parameterType="com.aimae.model.Cart">
       INSERT INTO CART(CART_ID, USER_NUM, PRODUCT_ID, ORDER_DATE, DELY_ADDRESS, STATUS)
       VALUES(
           'CT_' || LPAD(CART_SEQ.nextval, 4, '0'),
           #{USER_NUM}, #{PRODUCT_ID}, SYSDATE, #{DELY_ADDRESS}, 0
       )
   </insert>
   
   <!-- 장바구니 목록 조회 -->
   <select id="cartList" parameterType="String" resultType="com.aimae.model.Cart">
       SELECT c.*, p.PRODUCT_NAME, p.PRICE,
              (SELECT ph2.PHOTO_PATH 
               FROM PHOTO ph2 
               WHERE ph2.PRODUCT_ID = p.PRODUCT_ID 
               AND ph2.PHOTO_PATH LIKE '%main.%' 
               AND ROWNUM = 1) as PHOTO_PATH
       FROM CART c 
       JOIN PRODUCT p ON c.PRODUCT_ID = p.PRODUCT_ID 
       WHERE c.USER_NUM = #{userNum} AND c.STATUS = 0
   </select>
   
   <!-- 장바구니 상품 수정 (주소) -->
   <update id="updateCart" parameterType="com.aimae.model.Cart">
       UPDATE CART SET DELY_ADDRESS = #{DELY_ADDRESS} WHERE CART_ID = #{CART_ID} AND USER_NUM = #{USER_NUM}
   </update>
   
   <!-- 장바구니 상품 삭제 -->
   <delete id="deleteCart" parameterType="String">
       DELETE FROM CART WHERE CART_ID = #{cartId}
   </delete>
   
   <!-- 장바구니에 물건이 몇개 들어가있는지 -->
   <select id="cartCount" parameterType="String" resultType="int">
       SELECT COUNT(*) FROM CART WHERE USER_NUM = #{userNum} AND STATUS = 0
   </select>
   
   <!-- 장바구니 STATUS 업데이트 (결제완료) -->
   <update id="updateCartStatus" parameterType="com.aimae.model.Cart">
       UPDATE CART SET STATUS = #{STATUS}, ORDER_DATE = SYSDATE WHERE CART_ID = #{CART_ID}
   </update>
   
   <!-- 결제완료된 장바구니 항목 조회 (마이페이지용) -->
   <select id="selectPurchasedCart" parameterType="String" resultType="com.aimae.model.Cart">
       SELECT c.*, p.PRODUCT_NAME, p.PRICE 
       FROM CART c 
       JOIN PRODUCT p ON c.PRODUCT_ID = p.PRODUCT_ID 
       WHERE c.USER_NUM = #{userNum} AND c.STATUS = 1
       ORDER BY c.ORDER_DATE DESC
   </select>
   
   <!-- 간단한 결제완료 처리 (사용자의 모든 장바구니 항목을 결제완료로 변경) -->
   <update id="updateAllCartStatus" parameterType="String">
       UPDATE CART SET STATUS = 1, ORDER_DATE = SYSDATE WHERE USER_NUM = #{userNum} AND STATUS = 0
   </update>
   
   <!-- 선택한 상품만 결제완료로 변경 -->
   <update id="updateCartStatusById" parameterType="String">
       UPDATE CART SET STATUS = 1, ORDER_DATE = SYSDATE WHERE CART_ID = #{cartId}
   </update>
   
   <!-- 디버깅용: 특정 사용자의 모든 장바구니 항목 조회 (STATUS 무관) -->
   <select id="getAllCartItems" parameterType="String" resultType="com.aimae.model.Cart">
       SELECT c.*, p.PRODUCT_NAME, p.PRICE 
       FROM CART c 
       JOIN PRODUCT p ON c.PRODUCT_ID = p.PRODUCT_ID 
       WHERE c.USER_NUM = #{userNum}
       ORDER BY c.ORDER_DATE DESC
   </select>
   
   <!-- 디버깅용: 특정 CART_ID의 상태 확인 -->
   <select id="getCartById" parameterType="String" resultType="com.aimae.model.Cart">
       SELECT c.*, p.PRODUCT_NAME, p.PRICE 
       FROM CART c 
       JOIN PRODUCT p ON c.PRODUCT_ID = p.PRODUCT_ID 
       WHERE c.CART_ID = #{cartId}
   </select>
</mapper>